name: Deploy Care Fe

on:
  push:
    branches:
      - develop
      - master
  pull_request:
    branches:
      - develop
      - master
  workflow_dispatch:

env:
  IMAGE_NAME: care_fe
  AWS_DEFAULT_REGION: ap-south-1
  AWS_DEFAULT_OUTPUT: json
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  EKS_CLUSTER_NAME: ${{ secrets.AWS_EKS_CLUSTER_NAME }}

jobs:
  test:
    if: github.repository == 'coronasafe/care_fe'
    runs-on: ubuntu-latest
    name: Test
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('package-lock.json', 'Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Test build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Run tests
        run: |
          echo "running tests..."

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  build-staging:
    needs: test
    name: Build & Push Staging to container registries
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/develop' }}
            type=raw,value=latest-${{ github.run_number }}-{{date 'YYYYMMDD'}}-{{sha}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
          flavor: |
            latest=true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('package-lock.json', 'Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  build-production:
    needs: test
    name: Build & Push Production to container registries
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=production-latest,enable=${{ github.ref == 'refs/heads/master' }}
            type=raw,value=production-latest-${{ github.run_number }}-{{date 'YYYYMMDD'}}-{{sha}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
          flavor: |
            latest=false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('package-lock.json', 'Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy-production-manipur:
    needs: build-production
    name: Deploy to GKE Manipur
    runs-on: ubuntu-latest
    environment:
      name: Production-Manipur
      url: https://care.mn.gov.in
    steps:
      - name: Checkout Kube Config
        uses: actions/checkout@v3
        with:
          repository: coronasafe/mn-care-infra
          token: ${{ secrets.GIT_ACCESS_TOKEN  }}
          path: kube
          ref: main

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER }}
          location: ${{ secrets.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: install kubectl
        uses: azure/setup-kubectl@v3.0
        with:
          version: "v1.23.6"
        id: install

      - name: Deploy Care Fe Production
        run: |
          mkdir -p $HOME/.kube/
          cd kube/deployments/
          sed -i -e "s/_BUILD_NUMBER_/${GITHUB_RUN_NUMBER}/g" care-fe.yaml
          kubectl apply -f care-fe.yaml

  deploy-production-karnataka:
    needs: build-production
    name: Deploy to GKE Karnataka
    runs-on: ubuntu-latest
    environment:
      name: Production-Karnataka
      url: https://karnataka.care
    steps:
      - name: Checkout Kube Config
        uses: actions/checkout@v3
        with:
          repository: coronasafe/ka-care-infra
          token: ${{ secrets.GIT_ACCESS_TOKEN  }}
          path: kube
          ref: main

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER }}
          location: ${{ secrets.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: install kubectl
        uses: azure/setup-kubectl@v3.0
        with:
          version: "v1.23.6"
        id: install

      - name: Deploy Care Fe Production
        run: |
          mkdir -p $HOME/.kube/
          cd kube/deployments/
          sed -i -e "s/_BUILD_NUMBER_/${GITHUB_RUN_NUMBER}/g" care-fe.yaml
          kubectl apply -f care-fe.yaml

  deploy-production-sikkim:
    needs: build-production
    name: Deploy to GKE Sikkim
    runs-on: ubuntu-latest
    environment:
      name: Production-Sikkim
      url: https://care.sikkim.gov.in
    steps:
      - name: Checkout Kube Config
        uses: actions/checkout@v3
        with:
          repository: coronasafe/sk-care-infra
          token: ${{ secrets.GIT_ACCESS_TOKEN  }}
          path: kube
          ref: main

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER }}
          location: ${{ secrets.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: install kubectl
        uses: azure/setup-kubectl@v3.0
        with:
          version: "v1.23.6"
        id: install

      - name: Deploy Care Fe Production
        run: |
          mkdir -p $HOME/.kube/
          cd kube/deployments/
          sed -i -e "s/_BUILD_NUMBER_/${GITHUB_RUN_NUMBER}/g" care-fe.yaml
          kubectl apply -f care-fe.yaml

  deploy-production-assam:
    needs: build-production
    name: Deploy to GKE Assam
    runs-on: ubuntu-latest
    environment:
      name: Production-Assam
      url: https://care.assam.gov.in
    steps:
      - name: Checkout Kube Config
        uses: actions/checkout@v3
        with:
          repository: coronasafe/as-care-infra
          token: ${{ secrets.GIT_ACCESS_TOKEN  }}
          path: kube
          ref: main

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER }}
          location: ${{ secrets.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: install kubectl
        uses: azure/setup-kubectl@v3.0
        with:
          version: "v1.23.6"
        id: install

      - name: Deploy Care Fe Production
        run: |
          mkdir -p $HOME/.kube/
          cd kube/deployments/
          sed -i -e "s/_BUILD_NUMBER_/${GITHUB_RUN_NUMBER}/g" care-fe.yaml
          kubectl apply -f care-fe.yaml

  deploy-production-nagaland:
    needs: build-production
    name: Deploy to GKE Nagaland
    runs-on: ubuntu-latest
    environment:
      name: Production - Nagaland
      url: https://care.nagaland.gov.in
    steps:
      - name: Checkout Kube Config
        uses: actions/checkout@v3
        with:
          repository: coronasafe/nl-care-infra
          token: ${{ secrets.GIT_ACCESS_TOKEN  }}
          path: kube
          ref: main

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Get the GKE credentials, so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER }}
          location: ${{ secrets.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: install kubectl
        uses: azure/setup-kubectl@v3.0
        with:
          version: "v1.23.6"
        id: install

      - name: Deploy Care Fe Production
        run: |
          mkdir -p $HOME/.kube/
          cd kube/deployments/
          sed -i -e "s/_BUILD_NUMBER_/${GITHUB_RUN_NUMBER}/g" care-fe.yaml
          kubectl apply -f care-fe.yaml
